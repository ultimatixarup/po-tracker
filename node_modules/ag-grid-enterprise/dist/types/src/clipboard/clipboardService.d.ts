import type { IClipboardCopyParams, IClipboardCopyRowsParams, IClipboardService, NamedBean } from 'ag-grid-community';
import { BeanStub } from 'ag-grid-community';
export declare function stringToArray(strData: string, delimiter?: string): string[][];
export declare class ClipboardService extends BeanStub implements NamedBean, IClipboardService {
    beanName: "clipboardSvc";
    private clientSideRowModel;
    private gridCtrl;
    private lastPasteOperationTime;
    private navigatorApiFailed;
    postConstruct(): void;
    destroy(): void;
    pasteFromClipboard(): void;
    private pasteFromClipboardLegacy;
    private refocusLastFocusedCell;
    private getClipboardDelimiter;
    private processClipboardData;
    private doPasteOperation;
    private pasteIntoActiveRange;
    private getDisplayedColumnsStartingAt;
    private pasteStartingFromFocusedCell;
    private isPasteSingleValueIntoRange;
    private pasteSingleValueIntoRange;
    private hasOnlyOneValueToPaste;
    copyRangeDown(): void;
    private removeLastLineIfBlank;
    private fireRowChanged;
    private pasteMultipleValues;
    private updateCellValue;
    copyToClipboard(params?: IClipboardCopyParams): void;
    cutToClipboard(params?: IClipboardCopyParams, source?: 'api' | 'ui' | 'contextMenu'): void;
    private copyOrCutToClipboard;
    private shouldCopyCells;
    private shouldCopyRows;
    private clearCellsAfterCopy;
    private clearSelectedRows;
    private clearCellValue;
    private iterateActiveRanges;
    private iterateActiveRange;
    copySelectedRangeToClipboard(params?: IClipboardCopyParams): void;
    private buildDataFromMergedRanges;
    private buildDataFromRanges;
    private getRangeRowPositionsAndCellsToFlash;
    private getCellsToFlashFromRowNodes;
    private copyFocusedCellToClipboard;
    copySelectedRowsToClipboard(params?: IClipboardCopyRowsParams): void;
    private buildExportParams;
    private dispatchFlashCells;
    private processCell;
    private copyDataToClipboard;
    private copyDataToClipboardLegacy;
    private executeOnTempElement;
    private getRangeSize;
}
